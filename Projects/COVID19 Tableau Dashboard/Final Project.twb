<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
      </column>
    </datasource>
    <datasource caption='COVID-19 Activity' inline='true' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-19 Activity' name='textscan.12wqex20s8wr6r101w5cx10988ny'>
            <connection class='textscan' directory='E:/OneDrive/DSU/INFS 776/Final Project/covid-19-data-resource-hub-covid-19-case-counts' filename='COVID-19 Activity.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
            <column datatype='string' name='COUNTY_NAME' ordinal='1' />
            <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
            <column datatype='date' name='REPORT_DATE' ordinal='3' />
            <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
            <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
            <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
            <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
            <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
            <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
            <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
            <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
            <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
            <column datatype='string' name='COUNTY_NAME' ordinal='1' />
            <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
            <column datatype='date' name='REPORT_DATE' ordinal='3' />
            <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
            <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
            <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
            <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
            <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
            <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
            <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
            <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
            <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_CASES_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_POSITIVE_CASES_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_CASES_COUNT</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE_STATE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVINCE_STATE_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PROVINCE_STATE_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REPORT_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[REPORT_DATE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>REPORT_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTINENT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTINENT_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>CONTINENT_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATA_SOURCE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATA_SOURCE_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>DATA_SOURCE_NAME</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_NEW_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_DEATH_NEW_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_DEATH_NEW_COUNT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_FIPS_NUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY_FIPS_NUMBER]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTY_FIPS_NUMBER</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_3_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_ALPHA_3_CODE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_ALPHA_3_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_SHORT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_SHORT_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_SHORT_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_2_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_ALPHA_2_CODE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_ALPHA_2_CODE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_POSITIVE_NEW_CASES_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_DEATH_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_DEATH_COUNT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent Name' datatype='string' name='[CONTINENT_NAME]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[COUNTRY_ALPHA_2_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[COUNTRY_ALPHA_3_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[COUNTY_FIPS_NUMBER]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
      </column>
      <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
      </column>
      <column caption='Death per day threshold' datatype='string' name='[Calculation_1135188591191957513]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;[Calculation_1135188591190781960] &gt; [Parameters].[Parameter 1]&#13;&#10;Then &#13;&#10;&apos;Greater than [Death per day Threshold] deaths per day&apos; &#13;&#10;ELSE&#13;&#10;&apos;Less than [Death per day Threshold] deaths per day&apos;&#13;&#10;END' />
      </column>
      <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
      </column>
      <column caption='Avg new Cases per day' datatype='real' name='[Calculation_1135188591203053580]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/[Calculation_1135188591190077447]' />
      </column>
      <column caption='Data Source Name' datatype='string' name='[DATA_SOURCE_NAME]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID-19 Activity.csv' datatype='table' name='[__tableau_internal_object_id__].[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]' role='measure' type='quantitative' />
      <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTY_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aguada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bear Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Culebra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Foard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sabana Grande&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San German&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dorado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jayuya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juana Diaz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bayamon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ceiba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comerio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fajardo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hatillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenedy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kusilvak Census Area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Doddridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mora&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Penuelas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toa Baja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ciales&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dundy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McCone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McMullen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rincon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweet Grass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chouteau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hormigueros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kingman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Powder River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villalba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corozal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guaynabo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Humacao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Las Piedras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Sebastian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anasco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Judith Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Loiza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orocovis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Towner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yauco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coamo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guayama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lajas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ontonagon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patillas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haakon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isabela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maricao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mayaguez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yabucoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catano&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dolores&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vega Alta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayanilla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Las Marias&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trujillo Alto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilliam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake of the Woods&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luquillo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naranjito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sterling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aguas Buenas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caguas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quebradillas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Isabel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adjuntas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arroyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barceloneta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Rojo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Camuy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stonewall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hooker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juncos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vieques&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guanica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morovis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naguabo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shoshone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vega Baja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aibonito&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barranquitas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canovanas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cidra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roger Mills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. John&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toa Alta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wibaux&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gurabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maunabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utuado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID-19 Activity.csv' id='COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264'>
            <properties context=''>
              <relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='1' />
                  <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
                  <column datatype='date' name='REPORT_DATE' ordinal='3' />
                  <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
                  <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
                  <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
                  <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
                  <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
                  <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
                  <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
                  <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
                  <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Deaths per day by State theshold'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='Death per day threshold' datatype='string' name='[Calculation_1135188591191957513]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;[Calculation_1135188591190781960] &gt; [Parameters].[Parameter 1]&#13;&#10;Then &#13;&#10;&apos;Greater than [Death per day Threshold] deaths per day&apos; &#13;&#10;ELSE&#13;&#10;&apos;Less than [Death per day Threshold] deaths per day&apos;&#13;&#10;END' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591191957513]' derivation='User' name='[usr:Calculation_1135188591191957513:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='35568826.842569813' min='23651659.951668806' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='7694714.6411058158' min='884904.68474015989' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>State:&lt;</run>
                <run>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</run>
                <run>&gt;&#10;Avg New Deaths Per Day: &lt;</run>
                <run>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C5817942-F843-48D1-8594-ADA5A4406498}' />
    </worksheet>
    <worksheet name='Deaths per day by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='32908715.962812364' min='25608257.612860553' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='6595549.215041114' min='2423858.5428652633' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' field-type='quantitative' max-size='1' min-size='0.00197543' type='quantsize' />
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0621852874755859' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80E9CD71-CD66-421B-8622-9C045F896BC8}' />
    </worksheet>
    <worksheet name='Moving Avg New Deaths per New Positive Cases US'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[win:usr:Calculation_1135188591196819466:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{44E9DEB7-BD2A-4491-865F-57B8CE6D3B90}' />
    </worksheet>
    <worksheet name='Moving Avg New Deaths per New Positive Cases US (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[win:usr:Calculation_1135188591196819466:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{8066E995-CE07-4BD6-9D73-AC6D5C69C87E}' />
    </worksheet>
    <worksheet name='Moving Avg of Daily Cases vs Deaths US'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{07DE4EBE-BEC6-449C-9AD1-7C109E809156}' />
    </worksheet>
    <worksheet name='Moving Avg of Daily Cases vs Deaths World'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{90E1891A-9474-4547-ADEF-D4588DDC526A}' />
    </worksheet>
    <worksheet name='Moving Avg of Daily Cases vs Deaths World by Cont'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Continent Name' datatype='string' name='[CONTINENT_NAME]' role='dimension' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CONTINENT_NAME]' derivation='None' name='[none:CONTINENT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{A9F4F83C-C479-4C5B-9BFD-B080C165DBC4}' />
    </worksheet>
    <worksheet name='New Death to New Case Ratio by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[usr:Calculation_1135188591196819466:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVINCE_STATE_NAME:nk]' member='%null%' />
              <groupfilter function='member' level='[none:PROVINCE_STATE_NAME:nk]' member='&quot;Alabama&quot;' />
              <groupfilter from='&quot;Alberta&quot;' function='range' level='[none:PROVINCE_STATE_NAME:nk]' to='&quot;Guam&quot;' />
              <groupfilter from='&quot;Idaho&quot;' function='range' level='[none:PROVINCE_STATE_NAME:nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='32914271.863955021' min='25197609.037147287' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='7089248.3454115205' min='2679726.5329718292' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='50.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' max='100.0' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#cd9f91</color>
                <color>#c26b51</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{13737A5D-B5E0-4648-96AA-331FC3AB9010}' />
    </worksheet>
    <worksheet name='New Death to New Case Ratio by State (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[usr:Calculation_1135188591196819466:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]'>
            <groupfilter function='level-members' level='[none:PROVINCE_STATE_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='50.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' max='100.0' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#cd9f91</color>
                <color>#c26b51</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk] / [federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</cols>
      </table>
      <simple-id uuid='{CD584895-F7EE-4F73-8C90-FF74F6E9D63C}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='Avg new Cases per day' datatype='real' name='[Calculation_1135188591203053580]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/[Calculation_1135188591190077447]' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591203053580]' derivation='User' name='[usr:Calculation_1135188591203053580:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <size column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591203053580:qk]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6A0D3F52-3E88-4DF1-BD18-749391F93822}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Moving Avg of Daily Cases vs Deaths US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{92A43CCD-A292-4BC4-B699-7082FEE15E22}' />
    </window>
    <window class='worksheet' name='Moving Avg of Daily Cases vs Deaths World'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{651CC80A-F7CA-4A7F-9A9D-BF1CE06C5E86}' />
    </window>
    <window class='worksheet' name='Moving Avg of Daily Cases vs Deaths World by Cont'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9719D2A6-23D1-4B1A-9421-50A165E70AA2}' />
    </window>
    <window class='worksheet' name='Deaths per day by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4030FC08-1E29-4024-868B-D9E7D4159CFB}' />
    </window>
    <window class='worksheet' name='Deaths per day by State theshold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{299EBE92-F0D2-4D93-99A6-CF59F2C6EF51}' />
    </window>
    <window class='worksheet' name='Moving Avg New Deaths per New Positive Cases US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{807B43E7-E652-4B69-9198-098A2D31372B}' />
    </window>
    <window class='worksheet' name='Moving Avg New Deaths per New Positive Cases US (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D53535B-3E52-4410-8E6C-0AAFC47236C1}' />
    </window>
    <window class='worksheet' name='New Death to New Case Ratio by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='198' type='marks' />
            <card size='93' type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E99A446A-CF77-4FF1-8B9D-50227F64C106}' />
    </window>
    <window class='worksheet' name='New Death to New Case Ratio by State (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='198' type='marks' />
            <card size='93' type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{31ADEB60-69B4-49AE-AE57-255AAF7B512D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55D917C2-ACA8-45B3-9BC7-BABF45CE71BB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Deaths per day by State theshold' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Deaths per day by state' width='192'>
      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
      bKYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Moving Avg New Deaths per New Positive Cases US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Avg New Deaths per New Positive Cases US (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Avg of Daily Cases vs Deaths US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Avg of Daily Cases vs Deaths World' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Moving Avg of Daily Cases vs Deaths World by Cont' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Death to New Case Ratio by State' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New Death to New Case Ratio by State (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
