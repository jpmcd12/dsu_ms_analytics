<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
      </column>
    </datasource>
    <datasource caption='COVID-19 Activity' inline='true' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='COVID-19 Activity' name='textscan.12wqex20s8wr6r101w5cx10988ny'>
            <connection class='textscan' directory='E:/OneDrive/DSU/INFS 776/Final Project/covid-19-data-resource-hub-covid-19-case-counts' filename='COVID-19 Activity.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
            <column datatype='string' name='COUNTY_NAME' ordinal='1' />
            <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
            <column datatype='date' name='REPORT_DATE' ordinal='3' />
            <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
            <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
            <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
            <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
            <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
            <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
            <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
            <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
            <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
            <column datatype='string' name='COUNTY_NAME' ordinal='1' />
            <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
            <column datatype='date' name='REPORT_DATE' ordinal='3' />
            <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
            <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
            <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
            <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
            <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
            <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
            <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
            <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
            <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_CASES_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_POSITIVE_CASES_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_CASES_COUNT</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTY_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE_STATE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVINCE_STATE_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PROVINCE_STATE_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REPORT_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[REPORT_DATE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>REPORT_DATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTINENT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTINENT_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>CONTINENT_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATA_SOURCE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATA_SOURCE_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>DATA_SOURCE_NAME</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_NEW_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_DEATH_NEW_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_DEATH_NEW_COUNT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_FIPS_NUMBER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY_FIPS_NUMBER]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTY_FIPS_NUMBER</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_3_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_ALPHA_3_CODE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_ALPHA_3_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_SHORT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_SHORT_NAME]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_SHORT_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY_ALPHA_2_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY_ALPHA_2_CODE]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>COUNTRY_ALPHA_2_CODE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_POSITIVE_NEW_CASES_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_POSITIVE_NEW_CASES_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEOPLE_DEATH_COUNT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PEOPLE_DEATH_COUNT]</local-name>
            <parent-name>[COVID-19 Activity.csv]</parent-name>
            <remote-alias>PEOPLE_DEATH_COUNT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Continent Name' datatype='string' name='[CONTINENT_NAME]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[COUNTRY_ALPHA_2_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[COUNTRY_ALPHA_3_CODE]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='integer' name='[COUNTY_FIPS_NUMBER]' role='dimension' type='ordinal' />
      <column caption='County Name' datatype='string' name='[COUNTY_NAME]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
      </column>
      <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
      </column>
      <column caption='Death per day threshold' datatype='string' name='[Calculation_1135188591191957513]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;[Calculation_1135188591190781960] &gt; [Parameters].[Parameter 1]&#13;&#10;Then &#13;&#10;&apos;Greater than [Death per day Threshold] deaths per day&apos; &#13;&#10;ELSE&#13;&#10;&apos;Less than [Death per day Threshold] deaths per day&apos;&#13;&#10;END' />
      </column>
      <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
      </column>
      <column caption='Avg new Cases per day' datatype='real' name='[Calculation_1135188591203053580]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/[Calculation_1135188591190077447]' />
      </column>
      <column caption='Data Source Name' datatype='string' name='[DATA_SOURCE_NAME]' role='dimension' type='nominal' />
      <column caption='People Death Count' datatype='integer' name='[PEOPLE_DEATH_COUNT]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
      <column caption='People Positive Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_CASES_COUNT]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
      <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID-19 Activity.csv' datatype='table' name='[__tableau_internal_object_id__].[COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264]' role='measure' type='quantitative' />
      <column-instance column='[COUNTY_NAME]' derivation='None' name='[none:COUNTY_NAME:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:COUNTY_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aguada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bear Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brewster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buena Vista city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Conejos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Culebra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denali Borough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falls Church city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Foard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haines Borough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harding&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kinney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reagan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sabana Grande&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San German&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Storey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tehama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trego&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Twiggs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Archuleta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bandera&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burnett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dallam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dorado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairbanks North Star Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fisher&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fredericksburg city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jayuya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juana Diaz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lassen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matanuska-Susitna Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Menard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northwest Arctic Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ozark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Petersburg Borough&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portsmouth city&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reynolds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schleicher&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willacy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baraga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bayamon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ceiba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comerio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cottle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danville city&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillingham Census Area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fajardo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grainger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hatillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jenkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juneau City and Borough&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenedy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kusilvak Census Area&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lampasas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lynn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pecos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prowers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Benito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schuyler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uvalde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bledsoe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bristol city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bullock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charles City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chesapeake city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cimarron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Doddridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Galax city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goliad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grimes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harmon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Wells&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mariposa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mora&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nolan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parmer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Penuelas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Preble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Quitman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rio Blanco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Lorenzo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Starr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swisher&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toa Baja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trimble&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yukon-Koyukuk Census Area&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blanco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Briscoe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ciales&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dundy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edgar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Heard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lanier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McCone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McMullen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pickett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Real&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rincon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Jacinto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweet Grass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winkler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyandot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandria city&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrews&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Camp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chouteau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Concho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cotton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Del Norte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Glascock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Highland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hormigueros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juniata&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kingman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marengo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maverick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Navarro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noxubee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oscoda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Powder River&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rappahannock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rockbridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sutter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Val Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Villalba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amelia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baltimore city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corozal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crenshaw&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeWitt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dooly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guaynabo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampton city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisonburg city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Humacao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake and Peninsula Borough&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Las Piedras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lunenburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manassas city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Massac&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mono&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oglala Lakota&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Sebastian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Louis city&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yancey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anasco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arecibo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Camas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chattahoochee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colusa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crockett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gilpin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hartley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Judith Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kemper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King and Queen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lamb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Loiza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Motley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orocovis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Petersburg city&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prince of Wales-Hyder Census Area&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Schley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shackelford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Towner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wharton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodruff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yauco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alpine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bethel Census Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Callahan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coamo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gilchrist&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guayama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huerfano&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keya Paha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lajas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Las Animas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ontonagon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patillas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Perquimans&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rains&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seneca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeast Fairbanks Census Area&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sully&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trousdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unicoi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alfalfa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chowan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crowley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dimmit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Echols&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glasscock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haakon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isabela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lavaca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maricao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mayaguez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meriwether&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palo Pinto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Piatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valdez-Cordova Census Area&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waynesboro city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Winchester city&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gonzales&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hocking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ketchikan Gateway Borough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Modoc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nome Census Area&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oceana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ouray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rio Grande&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somervell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Staunton city&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Terrell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinity&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yabucoa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allendale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catano&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Collingsworth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dolores&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gallia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hendry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McCulloch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moffat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ochiltree&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pepin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reeves&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saguache&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suffolk city&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vega Alta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wilbarger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zapata&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aransas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bollinger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burleson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottesville city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Donley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eureka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guayanilla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inyo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Las Marias&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Live Oak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Slope Borough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owsley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poquoson city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Price&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salem city&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Saba&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sequatchie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tallahatchie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trujillo Alto&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Archer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bastrop&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Childress&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cochran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deaf Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dickens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Garrard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gilliam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kimble&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kodiak Island Borough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake of the Woods&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaSalle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Llano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luquillo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manassas Park city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mellette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morrow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naranjito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roanoke city&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sterling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Throckmorton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aguas Buenas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caguas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dixie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emporia city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gogebic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hemphill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Loup&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quebradillas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Isabel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Titus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Treutlen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Wert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Young&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adjuntas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arroyo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barceloneta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Rojo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Camuy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Culberson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glenn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hyde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalkaska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montmorency&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pamlico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pickaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plumas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stonewall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Treasure&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia Beach city&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wrangell City and Borough&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yoakum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aleutians East Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arenac&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Banner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coshocton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfax city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Freestone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenlee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hansford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hooker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Irion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juncos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenai Peninsula Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manistee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montague&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moultrie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport News city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norton city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piute&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Runnels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sitka City and Borough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stewart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Towns&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vieques&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atascosa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bertie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colonial Heights city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doña Ana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fentress&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guanica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hodgeman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hudspeth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jack&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Keweenaw&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kleberg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LaGrange&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morovis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Naguabo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Presque Isle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radford city&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Refugio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shoshone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taliaferro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vega Baja&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Feliciana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilcox&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wirt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zavala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aibonito&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alleghany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baca&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barranquitas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol Bay Borough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canovanas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cidra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gaines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hinsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Issaquena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jim Hogg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LaPorte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McCormick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Red River&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roger Mills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scurry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. John&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tensas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toa Alta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyrrell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wibaux&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aleutians West Census Area&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glades&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greensville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gurabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hopewell city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lynchburg city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maunabo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Osborne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rush&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Augustine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schoolcraft&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sharkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tillman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utuado&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg city&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID-19 Activity.csv' id='COVID-19 Activity.csv_274D0DE2CF94497380567AFB7326D264'>
            <properties context=''>
              <relation connection='textscan.12wqex20s8wr6r101w5cx10988ny' name='COVID-19 Activity.csv' table='[COVID-19 Activity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='PEOPLE_POSITIVE_CASES_COUNT' ordinal='0' />
                  <column datatype='string' name='COUNTY_NAME' ordinal='1' />
                  <column datatype='string' name='PROVINCE_STATE_NAME' ordinal='2' />
                  <column datatype='date' name='REPORT_DATE' ordinal='3' />
                  <column datatype='string' name='CONTINENT_NAME' ordinal='4' />
                  <column datatype='string' name='DATA_SOURCE_NAME' ordinal='5' />
                  <column datatype='integer' name='PEOPLE_DEATH_NEW_COUNT' ordinal='6' />
                  <column datatype='integer' name='COUNTY_FIPS_NUMBER' ordinal='7' />
                  <column datatype='string' name='COUNTRY_ALPHA_3_CODE' ordinal='8' />
                  <column datatype='string' name='COUNTRY_SHORT_NAME' ordinal='9' />
                  <column datatype='string' name='COUNTRY_ALPHA_2_CODE' ordinal='10' />
                  <column datatype='integer' name='PEOPLE_POSITIVE_NEW_CASES_COUNT' ordinal='11' />
                  <column datatype='integer' name='PEOPLE_DEATH_COUNT' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='7 Day Moving Avg of Daily Cases vs Deaths US'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{07DE4EBE-BEC6-449C-9AD1-7C109E809156}' />
    </worksheet>
    <worksheet name='Avg Deaths vs Cases per Day by Month and Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='Avg new Cases per day' datatype='real' name='[Calculation_1135188591203053580]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/[Calculation_1135188591190077447]' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591203053580]' derivation='User' name='[usr:Calculation_1135188591203053580:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='250.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <size column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591203053580:qk]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6FB485CE-8F98-4A69-A04C-8F78F4EF52AA}' />
    </worksheet>
    <worksheet name='Avg Deaths vs Cases per Day by Month and State'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='Avg new Cases per day' datatype='real' name='[Calculation_1135188591203053580]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/[Calculation_1135188591190077447]' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591203053580]' derivation='User' name='[usr:Calculation_1135188591203053580:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='50.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' min='0.0' palette='orange_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <size column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591203053580:qk]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <text column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6A0D3F52-3E88-4DF1-BD18-749391F93822}' />
    </worksheet>
    <worksheet name='Deaths per day by State Threshold'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='Death per day threshold' datatype='string' name='[Calculation_1135188591191957513]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;[Calculation_1135188591190781960] &gt; [Parameters].[Parameter 1]&#13;&#10;Then &#13;&#10;&apos;Greater than [Death per day Threshold] deaths per day&apos; &#13;&#10;ELSE&#13;&#10;&apos;Less than [Death per day Threshold] deaths per day&apos;&#13;&#10;END' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591191957513]' derivation='User' name='[usr:Calculation_1135188591191957513:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='33093653.160483155' min='25154700.512782123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='7857773.7886218745' min='1159898.1233107736' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>State:&lt;</run>
                <run>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</run>
                <run>&gt;&#10;Avg New Deaths Per Day: &lt;</run>
                <run>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C5817942-F843-48D1-8594-ADA5A4406498}' />
    </worksheet>
    <worksheet name='Deaths per day by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='32908715.962812364' min='25608257.612860553' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='6595549.215041114' min='2423858.5428652633' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' field-type='quantitative' max-size='1' min-size='0.00197543' type='quantsize' />
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.0621852874755859' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80E9CD71-CD66-421B-8622-9C045F896BC8}' />
    </worksheet>
    <worksheet name='Moving Avg New Cases per Death per Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[win:usr:Calculation_1135188591196819466:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{8066E995-CE07-4BD6-9D73-AC6D5C69C87E}' />
    </worksheet>
    <worksheet name='Moving Avg New Deaths per New Positive Cases US'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[sum:PEOPLE_DEATH_NEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[win:usr:Calculation_1135188591196819466:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:usr:Calculation_1135188591196819466:qk:12]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{44E9DEB7-BD2A-4491-865F-57B8CE6D3B90}' />
    </worksheet>
    <worksheet name='Moving Avg of Daily Cases vs Deaths World'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{90E1891A-9474-4547-ADEF-D4588DDC526A}' />
    </worksheet>
    <worksheet name='Moving Avg of Daily Cases vs Deaths World by Cont'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Continent Name' datatype='string' name='[CONTINENT_NAME]' role='dimension' type='nominal' />
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CONTINENT_NAME]' derivation='None' name='[none:CONTINENT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REPORT_DATE]' derivation='None' name='[none:REPORT_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PEOPLE_DEATH_NEW_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' derivation='Sum' name='[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_POSITIVE_NEW_CASES_COUNT:qk:12] + [federated.0x2djpa0ibjgzg1azu3xl045lotk].[win:sum:PEOPLE_DEATH_NEW_COUNT:qk:4])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:REPORT_DATE:qk]</cols>
      </table>
      <simple-id uuid='{A9F4F83C-C479-4C5B-9BFD-B080C165DBC4}' />
    </worksheet>
    <worksheet name='New Death to New Case Ratio by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[usr:Calculation_1135188591196819466:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVINCE_STATE_NAME:nk]' member='%null%' />
              <groupfilter function='member' level='[none:PROVINCE_STATE_NAME:nk]' member='&quot;Alabama&quot;' />
              <groupfilter from='&quot;Alberta&quot;' function='range' level='[none:PROVINCE_STATE_NAME:nk]' to='&quot;Guam&quot;' />
              <groupfilter from='&quot;Idaho&quot;' function='range' level='[none:PROVINCE_STATE_NAME:nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]' field-type='quantitative' max='32914271.863955021' min='25197609.037147287' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]' field-type='quantitative' max='7089248.3454115205' min='2679726.5329718292' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='50.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' max='100.0' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#cd9f91</color>
                <color>#c26b51</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' />
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' />
              <tooltip column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
              <geometry column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Latitude (generated)]</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{13737A5D-B5E0-4648-96AA-331FC3AB9010}' />
    </worksheet>
    <worksheet name='New Death to New Case Ratio by State (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='COVID-19 Activity' name='federated.0x2djpa0ibjgzg1azu3xl045lotk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x2djpa0ibjgzg1azu3xl045lotk'>
            <column caption='Country Short Name' datatype='string' name='[COUNTRY_SHORT_NAME]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='number of days' datatype='integer' name='[Calculation_1135188591190077447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,DATETIME(MIN([REPORT_DATE])), DATETIME(MAX([REPORT_DATE])))' />
            </column>
            <column caption='Avg New Deaths per day' datatype='real' name='[Calculation_1135188591190781960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_DEATH_NEW_COUNT]) / [Calculation_1135188591190077447]' />
            </column>
            <column caption='New Death to New Case Ratio' datatype='real' name='[Calculation_1135188591196819466]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([PEOPLE_POSITIVE_NEW_CASES_COUNT])/sum([PEOPLE_DEATH_NEW_COUNT])' />
            </column>
            <column caption='People Death New Count' datatype='integer' name='[PEOPLE_DEATH_NEW_COUNT]' role='measure' type='quantitative' />
            <column caption='People Positive New Cases Count' datatype='integer' name='[PEOPLE_POSITIVE_NEW_CASES_COUNT]' role='measure' type='quantitative' />
            <column caption='Province State Name' datatype='string' name='[PROVINCE_STATE_NAME]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Report Date' datatype='date' name='[REPORT_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[REPORT_DATE]' derivation='Month' name='[mn:REPORT_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[COUNTRY_SHORT_NAME]' derivation='None' name='[none:COUNTRY_SHORT_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE_STATE_NAME]' derivation='None' name='[none:PROVINCE_STATE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1135188591190781960]' derivation='User' name='[usr:Calculation_1135188591190781960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1135188591196819466]' derivation='User' name='[usr:Calculation_1135188591196819466:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]'>
            <groupfilter from='3' function='range' level='[mn:REPORT_DATE:ok]' to='7' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]'>
            <groupfilter function='member' level='[none:COUNTRY_SHORT_NAME:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]'>
            <groupfilter function='level-members' level='[none:PROVINCE_STATE_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</column>
            <column>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='50.0' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' max='100.0' num-steps='5' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#cd9f91</color>
                <color>#c26b51</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk] / [federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok])</rows>
        <cols>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</cols>
      </table>
      <simple-id uuid='{CD584895-F7EE-4F73-8C90-FF74F6E9D63C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death per day Threshold' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='12' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='horz' w='82400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='7' w='82400' x='800' y='1000'>
                <zone h='49000' id='3' name='7 Day Moving Avg of Daily Cases vs Deaths US' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='5' name='Moving Avg New Cases per Death per Day' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49000' id='10' name='Deaths per day by State Threshold' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='11' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='13' name='Deaths per day by State Threshold' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6500' id='14' mode='type_in' param='[Parameters].[Parameter 1]' w='16000' x='83200' y='9250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='7 Day Moving Avg of Daily Cases vs Deaths US' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='6500' id='14' mode='type_in' param='[Parameters].[Parameter 1]' w='16000' x='83200' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Moving Avg New Cases per Death per Day' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Deaths per day by State Threshold' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8250' id='13' name='Deaths per day by State Threshold' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D58ED621-A2F2-49CF-900B-E12BE54EFB6F}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='6' w='82400' x='800' y='1000'>
              <zone h='49000' id='5' name='Moving Avg of Daily Cases vs Deaths World by Cont' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Avg Deaths vs Cases per Day by Month and Country' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='9' name='Moving Avg of Daily Cases vs Deaths World by Cont' pane-specification-id='4' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='11' name='Avg Deaths vs Cases per Day by Month and Country' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='16750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='12' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Moving Avg of Daily Cases vs Deaths World by Cont' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='15750' id='9' name='Moving Avg of Daily Cases vs Deaths World by Cont' pane-specification-id='4' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Avg Deaths vs Cases per Day by Month and Country' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='11' name='Avg Deaths vs Cases per Day by Month and Country' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='16750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3071AE3F-F0B9-402A-B9FB-2AEEF6D61B16}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='New Death to New Case Ratio by State' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='New Death to New Case Ratio by State' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='New Death to New Case Ratio by State' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='New Death to New Case Ratio by State' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D12B13A1-8735-49BD-B559-D063B62DF498}' />
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Avg Deaths vs Cases per Day by Month and State' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Avg Deaths vs Cases per Day by Month and State' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Avg Deaths vs Cases per Day by Month and State' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Avg Deaths vs Cases per Day by Month and State' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B528EEF0-7C76-4C4E-8DB7-F27B76C0DFB6}' />
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Avg Deaths vs Cases per Day by Month and Country' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Avg Deaths vs Cases per Day by Month and Country' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Avg Deaths vs Cases per Day by Month and Country' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Avg Deaths vs Cases per Day by Month and Country' pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F6613A2F-FA14-4630-BA74-4A58B8BCC956}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='7 Day Moving Avg of Daily Cases vs Deaths US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{92A43CCD-A292-4BC4-B699-7082FEE15E22}' />
    </window>
    <window class='worksheet' name='Moving Avg of Daily Cases vs Deaths World'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{651CC80A-F7CA-4A7F-9A9D-BF1CE06C5E86}' />
    </window>
    <window class='worksheet' name='Moving Avg of Daily Cases vs Deaths World by Cont'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[dy:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9719D2A6-23D1-4B1A-9421-50A165E70AA2}' />
    </window>
    <window class='worksheet' name='Deaths per day by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[sum:PEOPLE_DEATH_NEW_COUNT:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4030FC08-1E29-4024-868B-D9E7D4159CFB}' />
    </window>
    <window class='worksheet' name='Deaths per day by State Threshold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTY_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591191957513:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{299EBE92-F0D2-4D93-99A6-CF59F2C6EF51}' />
    </window>
    <window class='worksheet' name='Moving Avg New Deaths per New Positive Cases US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{807B43E7-E652-4B69-9198-098A2D31372B}' />
    </window>
    <window class='worksheet' name='Moving Avg New Cases per Death per Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D53535B-3E52-4410-8E6C-0AAFC47236C1}' />
    </window>
    <window class='worksheet' name='New Death to New Case Ratio by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='198' type='marks' />
            <card size='93' type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E99A446A-CF77-4FF1-8B9D-50227F64C106}' />
    </window>
    <window class='worksheet' name='New Death to New Case Ratio by State (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='198' type='marks' />
            <card size='93' type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591196819466:qk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{31ADEB60-69B4-49AE-AE57-255AAF7B512D}' />
    </window>
    <window class='worksheet' name='Avg Deaths vs Cases per Day by Month and State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55D917C2-ACA8-45B3-9BC7-BABF45CE71BB}' />
    </window>
    <window class='worksheet' name='Avg Deaths vs Cases per Day by Month and Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[mn:REPORT_DATE:ok]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:COUNTRY_SHORT_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:PROVINCE_STATE_NAME:nk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[usr:Calculation_1135188591190781960:qk]</field>
            <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[yr:REPORT_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53C7348E-277B-4A21-A727-FCF9AB6B9A65}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='7 Day Moving Avg of Daily Cases vs Deaths US' />
        <viewpoint name='Deaths per day by State Threshold'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Moving Avg New Cases per Death per Day'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{34E4361A-1077-4310-BE1A-1CAE928461A5}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg Deaths vs Cases per Day by Month and Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Avg of Daily Cases vs Deaths World by Cont'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x2djpa0ibjgzg1azu3xl045lotk].[none:CONTINENT_NAME:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5256DE5A-1CDF-4CD7-A7CB-1CF9F82CCDCA}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='New Death to New Case Ratio by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DC7092A4-A095-4EA9-9669-DD41F5FAFAA8}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Avg Deaths vs Cases per Day by Month and State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{782EFEF7-88E2-47E9-B0E6-77E6B7118B09}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='Avg Deaths vs Cases per Day by Month and Country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E0693D06-F251-466F-80FC-CE3A5A363227}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='7 Day Moving Avg of Daily Cases vs Deaths US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Deaths vs Cases per Day by Month and Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Deaths vs Cases per Day by Month and State' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      gcgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths per day by State Threshold' width='192'>
      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
      pgx0qPIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Deaths per day by state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Avg New Cases per Death per Day' width='192'>
      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
      j0o1R9/4W/4/8ud4vHUQUxQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Moving Avg New Deaths per New Positive Cases US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Avg of Daily Cases vs Deaths World' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Moving Avg of Daily Cases vs Deaths World by Cont' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Death to New Case Ratio by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New Death to New Case Ratio by State (2)' width='192'>
      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
      Tkg8WYaPN8IAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
